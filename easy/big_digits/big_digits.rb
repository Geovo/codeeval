=begin
zero = ["-**--", "*--*-", "*--*-", "*--*-", "-**--"]
one = ["--*--", "-**--", "--*--", "--*--", "-***-"]
two = ["***--", "---*-", "-**--", "*----", "****-"]
three = ["***--", "---*-", "-**--", "---*-", "***--"]
four = ["-*---", "*--*-", "****-", "---*-", "---*-"]
five = ["****-", "*----", "***--", "---*-", "***--"]
six = ["-**--", "*----", "***--", "*--*-", "-**--"]
seven = ["****-", "---*-", "--*--", "-*---", "-*---"]
eight = ["-**--", "*--*-", "-**--", "*--*-", "-**--"]
nine = ["-**--", "*--*-", "-***-", "---*-", "-**--"]
main = {0 => zero, 1 => one, 2 => two, 3 => three, 4 => four, 5 => five, 6 => six, 7 => seven, 8 => eight, 
9 => nine}
=end

#line = "1234567890"
#line.each_char do |num|
 #   output = ""
  #  5.times {|i| line.each_char {|c| output << main[c.to_i][i]}; output << "\n"}
   # print output
 # end  

# This below works
main = {0=>["-**--", "*--*-", "*--*-", "*--*-", "-**--"], 1=>["--*--", "-**--", "--*--", "--*--", "-***-"], 2=>["***--", "---*-", "-**--", "*----", "****-"], 3=>["***--", "---*-", "-**--", "---*-", "***--"], 4=>["-*---", "*--*-", "****-", "---*-", "---*-"], 5=>["****-", "*----", "***--", "---*-", "***--"], 6=>["-**--", "*----", "***--", "*--*-", "-**--"], 7=>["****-", "---*-", "--*--", "-*---", "-*---"], 8=>["-**--", "*--*-", "-**--", "*--*-", "-**--"], 9=>["-**--", "*--*-", "-***-", "---*-", "-**--"]}


File.open(ARGV[0]).each_line do |line|
  nu = ""
  line.chomp.split("").map{|x| nu << x if x =~ /\d+/ }
  s = nu.size
  output = ""
  5.times {|i| nu.each_char {|c| output << main[c.to_i][i]}; output << "\n"}
  output << "-" * (s * 5)
  puts output
end

# .scan /[\"\\\! \*\+\<\>\;\(\[\]\,]/
#p main

=begin
def beautiful(line)
  h = {}
  num = 26
  p line = line.chomp.downcase.delete(" ,.!/:)1234567890")
  line.reverse.split("").map {|c| if !h.has_key?(c) then h[c] = num; num -= 1 end}
  sum = 0
  c = {}
  h.each {|k,v| c[k] = line.count(k)}
  h.each {|k,v| sum += (v * c[k])}
  p h, c
  puts sum
end
=end